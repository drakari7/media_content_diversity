!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
By	data_collector.py	/^from selenium.webdriver.common.by import By$/;"	i
By	test.py	/^from selenium.webdriver.common.by import By$/;"	i
Dict	channel_statistics.py	/^from typing import List, Dict$/;"	i
EC	data_collector.py	/^from selenium.webdriver.support import expected_conditions as EC$/;"	i
EC	test.py	/^from selenium.webdriver.support import expected_conditions as EC$/;"	i
List	channel_statistics.py	/^from typing import List, Dict$/;"	i
News_Channel	channel_statistics.py	/^class News_Channel:$/;"	c
Options	data_collector.py	/^from selenium.webdriver.chrome.options import Options$/;"	i
Options	test.py	/^from selenium.webdriver.chrome.options import Options$/;"	i
PATH	data_collector.py	/^PATH = "\/Applications\/chromedriver"$/;"	v
WebDriverWait	data_collector.py	/^from selenium.webdriver.support.ui import WebDriverWait$/;"	i
WebDriverWait	test.py	/^from selenium.webdriver.support.ui import WebDriverWait$/;"	i
__init__	channel_statistics.py	/^    def __init__(self, link):$/;"	m	class:News_Channel
a	test.py	/^a = "1002"$/;"	v
average_views	channel_statistics.py	/^    def average_views(self) -> float:$/;"	m	class:News_Channel
b	test.py	/^b = "lala"$/;"	v
chunks	sanitise_data.py	/^                chunks = line.split('\\\\#\\\\')$/;"	v
datetime	data_collector.py	/^import datetime$/;"	i
files	sanitise_data.py	/^files = list(map(lambda x: 'channel_data\/' + x, os.listdir('channel_data')))$/;"	v
get_channel_links	tools.py	/^def get_channel_links():$/;"	f
get_channel_name	tools.py	/^def get_channel_name(channel_link: str):$/;"	f
is_broken	channel_statistics.py	/^    def is_broken(self):$/;"	m	class:News_Channel
is_int	tools.py	/^def is_int(a: str) -> bool:$/;"	f
lines	sanitise_data.py	/^            lines = f.readlines()$/;"	v
logging	data_collector.py	/^import logging$/;"	i
main	channel_statistics.py	/^def main():$/;"	f
main	data_collector.py	/^def main():$/;"	f
new_func	test.py	/^def new_func(a,b):$/;"	f
os	sanitise_data.py	/^import os$/;"	i
plt	channel_statistics.py	/^import matplotlib as plt$/;"	i
scrape_channel_data	data_collector.py	/^def scrape_channel_data(channel_link):$/;"	f
statistics	channel_statistics.py	/^import statistics$/;"	i
sys	data_collector.py	/^import sys$/;"	i
sys	test.py	/^import sys$/;"	i
tempfile	sanitise_data.py	/^    tempfile = file$/;"	v
time	data_collector.py	/^import time$/;"	i
time_range	channel_statistics.py	/^    def time_range(self):$/;"	m	class:News_Channel
tools	channel_statistics.py	/^import tools$/;"	i
tools	data_collector.py	/^import tools$/;"	i
tools	test.py	/^import tools$/;"	i
traceback	channel_statistics.py	/^import traceback$/;"	i
wait_till_visible_xpath	data_collector.py	/^def wait_till_visible_xpath(driver,xpath):$/;"	f
webdriver	data_collector.py	/^from selenium import webdriver$/;"	i
webdriver	test.py	/^from selenium import webdriver$/;"	i
