!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
By	data_collector.py	/^from selenium.webdriver.common.by import By$/;"	i
By	test.py	/^from selenium.webdriver.common.by import By$/;"	i
EC	data_collector.py	/^from selenium.webdriver.support import expected_conditions as EC$/;"	i
EC	test.py	/^from selenium.webdriver.support import expected_conditions as EC$/;"	i
List	channel_class.py	/^from typing import List$/;"	i
List	data_collector.py	/^from typing import List$/;"	i
NewsChannel	channel_class.py	/^class NewsChannel:$/;"	c
Options	test.py	/^from selenium.webdriver.chrome.options import Options$/;"	i
WebDriverWait	data_collector.py	/^from selenium.webdriver.support.ui import WebDriverWait$/;"	i
WebDriverWait	test.py	/^from selenium.webdriver.support.ui import WebDriverWait$/;"	i
__init__	channel_class.py	/^    def __init__(self, link):$/;"	m	class:NewsChannel
average_views	channel_class.py	/^    def average_views(self) -> float:$/;"	m	class:NewsChannel
cOptions	data_collector.py	/^from selenium.webdriver.chrome.options import Options as cOptions$/;"	i
channel_class	data_statistics.py	/^import channel_class$/;"	i
check	test.py	/^check = {'name': nme, 'degree': deg, 'score': scr} $/;"	v
chunks	sanitise_data.py	/^                chunks = line.split('\\\\#\\\\')$/;"	v
deg	test.py	/^deg = ["MBA", "BCA", "M.Tech", "MBA"]$/;"	v
fOptions	data_collector.py	/^from selenium.webdriver.firefox.options import Options as fOptions$/;"	i
files	sanitise_data.py	/^files = list(map(lambda x: 'channel_data\/' + x, os.listdir('channel_data')))$/;"	v
get_channel_links	tools.py	/^def get_channel_links():$/;"	f
get_channel_name	tools.py	/^def get_channel_name(channel_link: str):$/;"	f
get_driver	data_collector.py	/^def get_driver(browser: str):$/;"	f
get_testing_channel	tools.py	/^def get_testing_channel():$/;"	f
get_urls	data_collector.py	/^def get_urls(driver, channel_name, time_range) -> (List[str], List[str]):$/;"	f
graph_dir	data_statistics.py	/^graph_dir = 'graphs\/'$/;"	v
is_broken	channel_class.py	/^    def is_broken(self):$/;"	m	class:NewsChannel
is_int	tools.py	/^def is_int(x: str) -> bool:$/;"	f
level	data_collector.py	/^                    level=logging.INFO)$/;"	v
lines	sanitise_data.py	/^            lines = f.readlines()$/;"	v
links	data_statistics.py	/^links = tools.get_channel_links()[:10]$/;"	v
logging	data_collector.py	/^import logging$/;"	i
main	channel_class.py	/^def main():$/;"	f
main	data_collector.py	/^def main():$/;"	f
main	data_statistics.py	/^def main():$/;"	f
main	tools.py	/^def main():$/;"	f
matplotlib	data_statistics.py	/^import matplotlib.pyplot as plt$/;"	i
nme	test.py	/^nme = ["aparna", "pankaj", "sudhir", "Geeku"]$/;"	v
os	sanitise_data.py	/^import os$/;"	i
pd	data_statistics.py	/^import pandas as pd$/;"	i
plt	data_statistics.py	/^import matplotlib.pyplot as plt$/;"	i
prettytable	data_statistics.py	/^import prettytable$/;"	i
process_urls	data_collector.py	/^def process_urls(driver, channel_name, file_name, urls, titles) -> None:$/;"	f
scr	test.py	/^scr = [90, 40, 80, 98]$/;"	v
scrape_channel_data	data_collector.py	/^def scrape_channel_data(channel_link):$/;"	f
statistics	channel_class.py	/^import statistics$/;"	i
sys	data_collector.py	/^import sys$/;"	i
sys	test.py	/^import sys$/;"	i
tempfile	sanitise_data.py	/^    tempfile = file$/;"	v
time	data_collector.py	/^import time$/;"	i
time_ranges	data_statistics.py	/^def time_ranges():      #Time range in which the data has been collected$/;"	f
tools	channel_class.py	/^import tools$/;"	i
tools	data_collector.py	/^import tools$/;"	i
tools	data_statistics.py	/^import tools$/;"	i
tools	test.py	/^import tools$/;"	i
video_count_graph	data_statistics.py	/^def video_count_graph():$/;"	f
views_graph	data_statistics.py	/^def views_graph():$/;"	f
wait_till_visible_xpath	data_collector.py	/^def wait_till_visible_xpath(driver, xpath):$/;"	f
webdriver	data_collector.py	/^from selenium import webdriver$/;"	i
webdriver	test.py	/^from selenium import webdriver$/;"	i
